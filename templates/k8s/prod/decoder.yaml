apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{SERVICE_NAME}}
spec:
  selector:
    matchLabels:
      app:  {{SERVICE_NAME}}
  template:
    metadata:
      labels:
        app:  {{SERVICE_NAME}}
    spec:
      containers:
      - name: decoder
        image: {{CASITA_IMAGE_NAME_TAG}}
        imagePullPolicy: {{IMAGE_PULL_POLICY}}
        {{#if COMMAND}}
        command: ["{{{COMMAND}}}"]
        {{/if}}
        {{#if ARGS}}
        args: {{{json ARGS}}}
        {{/if}}
        env:
        - name: INSTANCE_ENV
          value: "{{K8S_ENV}}"
        - name: LOG_LEVEL
          value: "{{K8S_LOG_LEVEL}}"
        - name: GRB_FILE
          value: "decoded"
        - name : "GOOGLE_APPLICATION_CREDENTIALS"
          value : "/etc/google/service-account.json"
        - name: SSH_KEY_USERNAME
          valueFrom:
            secretKeyRef:
              name: decoder-ssh-user
              key: value
        {{#each env}}
        - name: {{name}}
          value: "{{value}}"
        {{/each}}
        resources:
          limits:
            memory: "256Mi"
            cpu: "1000m"
          requests:
            memory: "32Mi"
            cpu: "100m"
        volumeMounts:
        - mountPath: /storage/network
          name: nfspsc
        {{#each volumes}}
        - name: {{name}}
          mountPath: {{mountPath}}
        {{/each}}
      - name: secdecoder
        image: {{CASITA_IMAGE_NAME_TAG}}
        imagePullPolicy: {{IMAGE_PULL_POLICY}}
        {{#if COMMAND}}
        command: ["{{{COMMAND}}}"]
        {{/if}}
        {{#if ARGS}}
        args: {{{json ARGS}}}
        {{/if}}
        env:
        - name: INSTANCE_ENV
          value: "{{K8S_ENV}}"
        - name: LOG_LEVEL
          value: "{{K8S_LOG_LEVEL}}"
        - name: GRB_FILE
          value: "secdecoded"
        - name : "GOOGLE_APPLICATION_CREDENTIALS"
          value : "/etc/google/service-account.json"
        - name: SSH_KEY_USERNAME
          valueFrom:
            secretKeyRef:
              name: decoder-ssh-user
              key: value
        {{#each env}}
        - name: {{name}}
          value: "{{value}}"
        {{/each}}
        resources:
          limits:
            memory: "256Mi"
            cpu: "1000m"
          requests:
            memory: "32Mi"
            cpu: "100m"
        volumeMounts:
        - mountPath: /storage/network
          name: nfspsc
        {{#each volumes}}
        - name: {{name}}
          mountPath: {{mountPath}}
        {{/each}}
      volumes:
      {{#each volumes}}
      - name: {{name}}
        {{#if secretName}}
        secret:
          secretName: {{secretName}}
        {{/if}}
      {{/each}}
      - name: nfspsc
        persistentVolumeClaim:
          claimName: {{FILESTORE_VOLUME_NAME}}-claim
          readOnly: false
      {{#if nodeSelector}}
      nodeSelector:
        {{#if nodeSelector.intendedfor}}
        intendedfor: {{nodeSelector.intendedfor}}
        {{/if}}
      {{/if}}